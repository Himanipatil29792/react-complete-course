CDN 
crossorigin

1. React.js  this is core file of react this is the core framework algorithm which is written inside the core of react.
2. ReactDOM is the clearly see react dom this is the react library which is useful for dom operations and this is the react dom which need to modify the dom document object mode l


Package.json are configure for npm

Steps 
git init
git branch -M main
git add.

Episode 3
//parsel index.html is same as npm run start
parsel build index.html same as npm build 


//React Component
Everything is component in react
2 types of component
1> Class based component= Old way write component
-Uses JavaScript classes

2> Functional component = New way write component
-uses JavaScript Function
-its a normal js function which return something
-Functional component is a Function that return some piece of React Element or Some piece of JSX code

-jsx is react element so functional component call it as a Function a JavaScript function which returns a react element 

//Component Composition
-Composing two component into one another(HeadingComponent inside a rendering a Title Coomponent

{} =>Inside curly bracket you can put every javascript code
eg console.log, addition, concatenation

{Title()}
<Title/>
<Title></Title>
{100 +200}

You can compose any react element inside react element , a component inside a component, a component inside react element you can 
do a lot of things in these react element you can write this heading component also.

Parcel is a beast. Parcel is managing everything up.Parcel is managing Babel.

Babel is taking your JSX code and converting it to React.createElement.

React element, components, React, root, React dom.render


?.  => Shows optional chaining

key {}
key is reserve id

react indexs use this bad practices


 ## Two types of Export/Import
    - Named
    export const Component;
    import {Component} from "path"

    - Default export/import
    export default Component;
    import component from "path"


#### Search Box Body.js
i am tying input what is happening behind the scene

changing the local state variable
whenever you change a local state variable react re renders the component.

Whenever state variable update, react triggers a reconciliation cycle(re render the component) 

Input value is changed, so now its time to update my input box. so what is react is doing is react re rendering the body component.

react is re rendering the whole body component, but it is only updating input box value inside the DOM manipulation is very expensive.  


Why react is fast???
Virtual dom is not making it fast this reacts react fiber the new reconciliation algorithm which finds out the difference between two virtual dom and updates the dom only the portion of dom which that portion is required.that is why react fast. 
